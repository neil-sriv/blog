<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hugo on neilsriv blog</title>
    <link>https://blog.neilsriv.tech/tags/hugo/</link>
    <description>Recent content in Hugo on neilsriv blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <managingEditor>neil.srivastava1@gmail.com (neil Srivastava)</managingEditor>
    <webMaster>neil.srivastava1@gmail.com (neil Srivastava)</webMaster>
    <lastBuildDate>Wed, 09 Apr 2025 01:01:56 -0400</lastBuildDate>
    <atom:link href="https://blog.neilsriv.tech/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>migrating my aws database to cockroach labs in 12 hours</title>
      <link>https://blog.neilsriv.tech/tech/db_migration/</link>
      <pubDate>Wed, 09 Apr 2025 01:01:56 -0400</pubDate><author>neil.srivastava1@gmail.com (neil Srivastava)</author>
      <guid>https://blog.neilsriv.tech/tech/db_migration/</guid>
      <description>&lt;p&gt;if you don&amp;rsquo;t know, I run a side project called Ring, a small newsletter platform where groups of friends answer monthly questions that are collected and sent in an email. the entire project is hosted for free on AWS on a single EC2 machine with 1GB of memory and a postgres rds instance. unfortunately, these free tier benefits only last 1 year&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;so at the beginning of march, I finally get the dreaded email that my aws free tier benefits were ending on the 31st. I, of course, immediately forget about this and procrastinate doing anything about it. to be fair, I was moving into a new apartment and was very distracted. regardless, I found myself on March 31st with about 12 hours before I was about to get hit by an estimated $60 monthly bill for running everything.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>if you don&rsquo;t know, I run a side project called Ring, a small newsletter platform where groups of friends answer monthly questions that are collected and sent in an email. the entire project is hosted for free on AWS on a single EC2 machine with 1GB of memory and a postgres rds instance. unfortunately, these free tier benefits only last 1 year&hellip;</p>
<p>so at the beginning of march, I finally get the dreaded email that my aws free tier benefits were ending on the 31st. I, of course, immediately forget about this and procrastinate doing anything about it. to be fair, I was moving into a new apartment and was very distracted. regardless, I found myself on March 31st with about 12 hours before I was about to get hit by an estimated $60 monthly bill for running everything.</p>
<p>the bill breakdown was about:</p>
<ul>
<li>$45 for 750 hours (24/7 up-time) 10 GB postgres rds database</li>
<li>$10 for 750 hours (24/7 up-time) 1 GB EC2 machine</li>
<li>&lt;$5 for miscellaneous aws services (S3, VPC, CDN, etc.)</li>
</ul>
<p>so with a limited timeline, I decided to just focus on the high database cost problem for now.</p>
<p>TL;DR: I migrated my 2GB Postgres database from AWS RDS to CockroachDB in a day to avoid a $60/month bill. here’s how I pulled it off (and how TLS almost broke me).</p>
<h2 id="so-what-do-i-actually-need">so what do I actually need? <a class="anchor" href="#so-what-do-i-actually-need"
        title="Link to section: so what do I actually need?" aria-label="Link to section: so what do I actually need?">#</a></h2><ul>
<li>a managed RDS database</li>
<li>free if possible</li>
<li>current DB size is about 2GB so probably at least 5 GB would be good</li>
<li>750 hours of uptime</li>
<li>compatibility with postgres, sqlalchemy, and alembic all preferred</li>
</ul>
<h2 id="are-there-really-no-free-databases-these-days">are there really no free databases these days?? <a class="anchor" href="#are-there-really-no-free-databases-these-days"
        title="Link to section: are there really no free databases these days??" aria-label="Link to section: are there really no free databases these days??">#</a></h2><p>unfortunately not really! it&rsquo;s been long since the days where you could spin up heroku compute instances, mongodb nosql databases, or most personal usage of common software infrastructure for free. <em>well at least the limits are way lower now and the timelines are shortish.</em> I began searching around for options of free managed database hosting services; chatgpt is great for enumerating options and giving pros/cons but make sure you double check what&rsquo;s provided. I was misled a couple times and thought certain options were possible but they had sunset their free options or the limits were too strict.</p>



  <blockquote>
    <p>specifically planetscale has no more free tier and supabase limits are too low</p>
  </blockquote>
<h2 id="bugs-to-the-rescue">bugs to the rescue <a class="anchor" href="#bugs-to-the-rescue"
        title="Link to section: bugs to the rescue" aria-label="Link to section: bugs to the rescue">#</a></h2><p>my savior ended up being <a href="https://www.cockroachlabs.com/pricing/"><strong>cockroach labs</strong></a> with 10GB of free storage (amazing) and 50 million read units (no idea what that means). I&rsquo;d never heard of cockroach before but it&rsquo;s a distributed database service, meaning it was built with replication and sharding across multiple database nodes as the primary focus. I don&rsquo;t really need all that but it does implement the postgres wire protocol, so the majority of all postgres features should work out of the box. there is additionally a sqlalchemy extension that enabled working with cockroach and alembic should work automatically.</p>
<h2 id="how-do-you-actually-migrate-a-database">how do you actually migrate a database <a class="anchor" href="#how-do-you-actually-migrate-a-database"
        title="Link to section: how do you actually migrate a database" aria-label="Link to section: how do you actually migrate a database">#</a></h2><p>well the correct way is through something called logical replication and dual writing data to two databases concurrently. but I have a 2 GB database with about 19 tables, so I can get away with just pg_dumping the database to a file and then executing the sql in it directly.</p>
<h2 id="downtime">downtime <a class="anchor" href="#downtime"
        title="Link to section: downtime" aria-label="Link to section: downtime">#</a></h2><p>downtime considerations are incredibly critical when migrating a database. if you have an &ldquo;always available&rdquo; service, downtime is likely not an actual option for you. in that case, you must use dual-writing and a cut-over to actually migrate onto another database. however, my newsletter service gets spiky traffic and has no real concerns with downtime as long as there are no newsletters scheduled soon. so I pushed a frontend image that was a simple downtime page informing users that the web-app would be up and running in a few days.</p>
<h2 id="lets-get-started">let&rsquo;s get started <a class="anchor" href="#lets-get-started"
        title="Link to section: let&rsquo;s get started" aria-label="Link to section: let&rsquo;s get started">#</a></h2><p>time to get my hands dirty and jump in.</p>
<p>I have a local database used for development and testing. it runs in a docker container with a persisted volume. can I do the same thing with cockroach and test running my app locally, migrating all the data from my local postgres container, and running alembic migrations?</p>
<h3 id="docker-containers">docker containers <a class="anchor" href="#docker-containers"
        title="Link to section: docker containers" aria-label="Link to section: docker containers">#</a></h3>
          <link rel="stylesheet" href="/css/vendors/admonitions.5c73bad2903e7d2d44ad118370ebd8c2cf5f239d4d93c283e55c00f2f8d30746.css" integrity="sha256-XHO60pA&#43;fS1ErRGDcOvYws9fI51Nk8KD5VwA8vjTB0Y=" crossorigin="anonymous">
  <div class="admonition note">
    <div class="admonition-header">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M0 64C0 28.7 28.7 0 64 0L224 0l0 128c0 17.7 14.3 32 32 32l128 0 0 125.7-86.8 86.8c-10.3 10.3-17.5 23.1-21 37.2l-18.7 74.9c-2.3 9.2-1.8 18.8 1.3 27.5L64 512c-35.3 0-64-28.7-64-64L0 64zm384 64l-128 0L256 0 384 128zM549.8 235.7l14.4 14.4c15.6 15.6 15.6 40.9 0 56.6l-29.4 29.4-71-71 29.4-29.4c15.6-15.6 40.9-15.6 56.6 0zM311.9 417L441.1 287.8l71 71L382.9 487.9c-4.1 4.1-9.2 7-14.9 8.4l-60.1 15c-5.5 1.4-11.2-.2-15.2-4.2s-5.6-9.7-4.2-15.2l15-60.1c1.4-5.6 4.3-10.8 8.4-14.9z"/></svg>
      <span>docker vs orbstack</span>
    </div>
      <div class="admonition-content">
        <p>since I develop on macOS, I actually use <code>orbstack</code> instead of <code>docker desktop</code> with no issues</p>
      </div>
  </div>
<p>so my current postgres container is set up like this</p>

<figure class="highlight">
  <pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span><span style="color:#ff79c6">db</span>:
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>    <span style="color:#ff79c6">restart</span>: unless-stopped
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>    <span style="color:#ff79c6">container_name</span>: ring-db
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>    <span style="color:#ff79c6">image</span>: postgres:16.1
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>    <span style="color:#ff79c6">volumes</span>:
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>      - pgdata:/var/lib/postgresql/data
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>    <span style="color:#ff79c6">ports</span>:
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>      - <span style="color:#bd93f9">8004</span>:<span style="color:#bd93f9">5432</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>    <span style="color:#ff79c6">expose</span>:
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>      - <span style="color:#bd93f9">5432</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span>    <span style="color:#ff79c6">environment</span>:
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>      - POSTGRES_USER=REDACTED
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span>      - POSTGRES_PASSWORD=REDACTED
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14</span><span>      - POSTGRES_DB=ring
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15</span><span>    <span style="color:#ff79c6">profiles</span>: [ <span style="color:#f1fa8c">&#34;dev&#34;</span> ]
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16</span><span>    <span style="color:#ff79c6">networks</span>:
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17</span><span>      - default</span></span></code></pre>
</figure>
<p>and it was pretty simple to get the cockroach container to run as well</p>

<figure class="highlight">
  <pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span>  <span style="color:#ff79c6">cockroach</span>:
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>    <span style="color:#ff79c6">image</span>: cockroachdb/cockroach:latest
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>    <span style="color:#ff79c6">container_name</span>: ring-cockroach
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>    <span style="color:#ff79c6">restart</span>: unless-stopped
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>    <span style="color:#ff79c6">profiles</span>: [ <span style="color:#f1fa8c">&#34;dev&#34;</span> ]
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>    <span style="color:#ff79c6">command</span>: start-single-node --certs-dir=/root/.cockroach-certs
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>    <span style="color:#ff79c6">ports</span>:
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>      - <span style="color:#bd93f9">26257</span>:<span style="color:#bd93f9">26257</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>      - <span style="color:#bd93f9">8007</span>:<span style="color:#bd93f9">8080</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>    <span style="color:#ff79c6">environment</span>:
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span>      - COCKROACH_USER=ringcockroach
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>      - COCKROACH_PASSWORD=ringcockroach
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span>      - COCKROACH_DATABASE=ring
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14</span><span>    <span style="color:#ff79c6">volumes</span>:
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15</span><span>      - cockroach-data:/cockroach/cockroach-data
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16</span><span>      - ./certs:/root/.cockroach-certs
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17</span><span>    <span style="color:#ff79c6">networks</span>:
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18</span><span>      - default</span></span></code></pre>
</figure>
<p>note the command: <code>start-single-node</code> since I don&rsquo;t need to spin up multiple nodes with replication or sharding.</p>
<p>the docs suggested spinning up in <code>--insecure-mode</code>, but that caused failures to create the default <code>COCKROACH_USER</code> with <code>COCKROACH_PASSWORD</code>. using the <em>secure</em> mode with ssl ended up being <em>interesting&hellip;</em></p>

  <div class="admonition error">
    <div class="admonition-header">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM175 175c9.4-9.4 24.6-9.4 33.9 0l47 47 47-47c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-47 47 47 47c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-47-47-47 47c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l47-47-47-47c-9.4-9.4-9.4-24.6 0-33.9z"/></svg>
      <span>TLS 😭</span>
    </div>
      <div class="admonition-content">
        <p>I honestly don&rsquo;t know what TLS is and I am too lazy to really figure it out.
however
that really blew up in my face when trying to manage my <code>cockroachdb</code> local docker container.</p>



  <blockquote>
    <p>for my production server, the <code>cockroach</code> cloud set-up gives you the exact cert that you need and tells you where to mount it 🤷‍♂️. no problems there so far</p>
  </blockquote>
<p>the docs kept talking about doing things in insecure mode for local development, but then it wouldn&rsquo;t auto create the db user that I wanted. when naively doing things in secure mode, I thought it worked automatically; but that&rsquo;s only because I
first started the container in insecure mode so it auto created my db user and database, then took it down and restarted it in secure mode so it automatically generated TLS certs for the cockroach user. and then since I&rsquo;m using docker volumes to persist the state, things were working fine for the first day or two</p>
<p>but when I had to nuke my docker volume and restore from a backup because I messed up my database, I ended up in TLS hell.</p>
<p>the iteration cycle was spin up docker container while viewing logs -&gt; things break -&gt; take down container -&gt; delete volume -&gt; start again, over and over I was doing this with different certs, mounting the certs in different locations, trying different commands (e.g. cockroach start-single-node &ndash;cert-principal-map).</p>
<p>I eventually succeeded by creating the CA cert, the node cert, and a client cert for the &ldquo;root&rdquo; user and mounting all of those into a specified certs dir in my <code>cockroachdb</code> container. then when spinning up the container for the first time, it would auto create a client cert for the specified <code>COCKROACH_USER</code> I wanted. and now I can finally spin up and down the container as many times as I want. I don&rsquo;t get why I need all these certs <strong>and</strong> a &ldquo;root&rdquo; client cert when I only want access as the <code>COCKROACH_USER</code>.</p>



  <blockquote>
    <p>noting that if I remove my volume in the future for a hard reset, I will need to remove the autogenerated cert files from my certs directory mount</p>
  </blockquote>
      </div>
  </div>
<p>it was really convenient to be able to just <code>docker volume rm</code> and reset the persisted database as I was iterating on trying to get the <code>cockroach</code> db container up and running correctly</p>
<h3 id="fastapi-x-sqlalchemy-x-cockroach">fastapi x sqlalchemy x cockroach <a class="anchor" href="#fastapi-x-sqlalchemy-x-cockroach"
        title="Link to section: fastapi x sqlalchemy x cockroach" aria-label="Link to section: fastapi x sqlalchemy x cockroach">#</a></h3><p>replacing <code>postgres</code> with <code>cockroach</code> was really simple since I use <code>sqlalchemy</code> to connect to my database.</p>
<p>all I had to do was set my connection string to reference my <code>cockroach</code> container and pass the user and password for the <code>ring</code> database</p>

<figure class="highlight">
  <figcaption>
    <span class="title">.env</span>
  </figcaption>
  <pre tabindex="0" class="chroma"><code class="language-env" data-lang="env"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span><span style="color:#8be9fd;font-style:italic">COCKROACH_DATABASE_URI</span><span style="color:#ff79c6">=</span>cockroachdb://COCKROACH_USER:COCKROACH_PASSWORD@cockroach:26257/ring?sslmode<span style="color:#ff79c6">=</span>require</span></span></code></pre>
</figure>
<p>then I added the <code>sqlalchemy-cockroachdb</code> library using <code>uv</code></p>

  <div class="admonition note">
    <div class="admonition-header">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M0 64C0 28.7 28.7 0 64 0L224 0l0 128c0 17.7 14.3 32 32 32l128 0 0 125.7-86.8 86.8c-10.3 10.3-17.5 23.1-21 37.2l-18.7 74.9c-2.3 9.2-1.8 18.8 1.3 27.5L64 512c-35.3 0-64-28.7-64-64L0 64zm384 64l-128 0L256 0 384 128zM549.8 235.7l14.4 14.4c15.6 15.6 15.6 40.9 0 56.6l-29.4 29.4-71-71 29.4-29.4c15.6-15.6 40.9-15.6 56.6 0zM311.9 417L441.1 287.8l71 71L382.9 487.9c-4.1 4.1-9.2 7-14.9 8.4l-60.1 15c-5.5 1.4-11.2-.2-15.2-4.2s-5.6-9.7-4.2-15.2l15-60.1c1.4-5.6 4.3-10.8 8.4-14.9z"/></svg>
      <span>uv</span>
    </div>
      <div class="admonition-content">
        <p>I use <code>uv</code> to manage my python project with a <code>pyproject.toml</code> which keeps things in sync and manages dependencies automatically</p>
      </div>
  </div>

<figure class="highlight">
  <pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span>uv add sqlalchemy-cockroachdb</span></span></code></pre>
</figure>
<p>I was able to create my <code>sqlalchemy</code> database engine in the exact same way I was doing it with <code>postgres</code> and just swapped the connection string.</p>

<figure class="highlight">
  <figcaption>
    <span class="title">sqlalchemy_base.py</span>
  </figcaption>
  <pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span>engine <span style="color:#ff79c6">=</span> create_engine(
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2</span><span>    get_config()<span style="color:#ff79c6">.</span>cockroach_database_uri,
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3</span><span>)</span></span></code></pre>
</figure>

  <div class="admonition note">
    <div class="admonition-header">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M0 64C0 28.7 28.7 0 64 0L224 0l0 128c0 17.7 14.3 32 32 32l128 0 0 125.7-86.8 86.8c-10.3 10.3-17.5 23.1-21 37.2l-18.7 74.9c-2.3 9.2-1.8 18.8 1.3 27.5L64 512c-35.3 0-64-28.7-64-64L0 64zm384 64l-128 0L256 0 384 128zM549.8 235.7l14.4 14.4c15.6 15.6 15.6 40.9 0 56.6l-29.4 29.4-71-71 29.4-29.4c15.6-15.6 40.9-15.6 56.6 0zM311.9 417L441.1 287.8l71 71L382.9 487.9c-4.1 4.1-9.2 7-14.9 8.4l-60.1 15c-5.5 1.4-11.2-.2-15.2-4.2s-5.6-9.7-4.2-15.2l15-60.1c1.4-5.6 4.3-10.8 8.4-14.9z"/></svg>
      <span>get_config</span>
    </div>
      <div class="admonition-content">
        <p><code>get_config</code> is a cached function I wrote that just returns a <code>BaseSettings</code> object for my <code>fastapi</code> project. <code>BaseSettings</code> allows you to pass configuration settings to your <code>fastapi</code> app on startup through environment variables with <code>pydantic</code> features like field validation and computed fields.</p>
      </div>
  </div>
<p>for <code>alembic</code> and <code>pytest</code>, I used the same approach of swapping the connection string and had no issues</p>

<figure class="highlight">
  <figcaption>
    <span class="title">env.py</span>
  </figcaption>
  <pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span>config<span style="color:#ff79c6">.</span>set_main_option(<span style="color:#f1fa8c">&#34;sqlalchemy.url&#34;</span>, get_config()<span style="color:#ff79c6">.</span>cockroach_database_uri)</span></span></code></pre>
</figure>

<figure class="highlight">
  <figcaption>
    <span class="title">conftest.py</span>
  </figcaption>
  <pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span>engine <span style="color:#ff79c6">=</span> create_engine(config<span style="color:#ff79c6">.</span>cockroach_database_uri)</span></span></code></pre>
</figure>
<p>this is all it took to swap over to using <code>cockroach</code> for my local development environment, testing environment, and alembic configuration</p>
<h3 id="migrating-my-data---pg_dump-for-the-win">migrating my data - pg_dump for the win <a class="anchor" href="#migrating-my-data---pg_dump-for-the-win"
        title="Link to section: migrating my data - pg_dump for the win" aria-label="Link to section: migrating my data - pg_dump for the win">#</a></h3><p>dumping an entire database is as simple as running a single command</p>

<figure class="highlight">
  <pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span>docker <span style="color:#8be9fd;font-style:italic">exec</span> ring-db pg_dump -U ring-postgres -d ring &gt; local.sql</span></span></code></pre>
</figure>
<p>and then importing that into my <code>cockroach</code> container also only took a single command</p>

<figure class="highlight">
  <pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span>docker <span style="color:#8be9fd;font-style:italic">exec</span> -i ring-cockroach ./cockroach sql -d ring --url<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;postgresql://ringcockroach@127.0.0.1:26257/ring?sslcert=%2Froot%2F.cockroach-certs%2Fclient.root.crt&amp;sslkey=%2Froot%2F.cockroach-certs%2Fclient.root.key&amp;sslmode=verify-full&amp;sslrootcert=%2Froot%2F.cockroach-certs%2Fca.crt&#34;</span> &lt; local.sql</span></span></code></pre>
</figure>
<p>if you are wondering where I got the connection url from, <code>cockroach</code> actually prints it out for you on container start which is super convenient (since, again, I don&rsquo;t know how TLS works)</p>
<p>I did basically the same thing for my production database with the only added complexity being that I had to upload my dump from the EC2 to S3 and I used my production database connection string and password.</p>
<h2 id="cutover-time">cutover time <a class="anchor" href="#cutover-time"
        title="Link to section: cutover time" aria-label="Link to section: cutover time">#</a></h2><p>at this point, I merged and pushed my changes to production since I was relatively sure that I could start reading from my new database and I wanted to start live testing before I decommissioned my postgres DB. I felt safe doing this because I had my pg_dump backup of all production data and knew that I could always restore from there.</p>
<p>and just like magic, the site worked perfectly on my first try.</p>
<p>no, I&rsquo;m serious!</p>
<p>it was a pretty cool feeling to be able to just switch databases and have no issues or real user impact.</p>
<h2 id="whats-next">what&rsquo;s next <a class="anchor" href="#whats-next"
        title="Link to section: what&rsquo;s next" aria-label="Link to section: what&rsquo;s next">#</a></h2><p>I haven&rsquo;t dove into any of the <code>cockroachdb</code> special stuff yet, sharding, replication, or other distributed database features but that will be on the back-burner. next step is to migrate off my EC2 container! I think that the couple dollars for S3 and Cloudfront CDN are pretty cheap but I don&rsquo;t want to pay $10 for the EC2.</p>
<p>finding a free hosting provider for a 750 hour uptime 1 GB EC2 is pretty difficult (okay maybe impossible). so I think this is a good opportunity to remove my celery dependency for async scheduled task execution and be able to use either serverless or cold start servers for my fastAPI backend. I&rsquo;m not sure what my celery replacement will be yet but for the API server, there are options like Neon and Fly.io.</p>
]]></content:encoded>
    </item>
    <item>
      <title>setting up a personal blog with hugo</title>
      <link>https://blog.neilsriv.tech/tech/hugo/</link>
      <pubDate>Mon, 24 Feb 2025 19:44:43 -0500</pubDate><author>neil.srivastava1@gmail.com (neil Srivastava)</author>
      <guid>https://blog.neilsriv.tech/tech/hugo/</guid>
      <description>&lt;link rel=&#34;stylesheet&#34; href=&#34;https://blog.neilsriv.tech/css/vendors/admonitions.5c73bad2903e7d2d44ad118370ebd8c2cf5f239d4d93c283e55c00f2f8d30746.css&#34; integrity=&#34;sha256-XHO60pA&amp;#43;fS1ErRGDcOvYws9fI51Nk8KD5VwA8vjTB0Y=&#34; crossorigin=&#34;anonymous&#34;&gt;&#xA;  &lt;div class=&#34;admonition warning&#34;&gt;&#xA;    &lt;div class=&#34;admonition-header&#34;&gt;&#xA;      &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z&#34;/&gt;&lt;/svg&gt;&#xA;      &lt;span&gt;caveat&lt;/span&gt;&#xA;    &lt;/div&gt;&#xA;      &lt;div class=&#34;admonition-content&#34;&gt;&#xA;        &lt;p&gt;I&amp;rsquo;m writing based on my own experiences using &lt;code&gt;hugo&lt;/code&gt; and my understanding of how things work, I&amp;rsquo;ll probably get things wrong so please refer to the &lt;a href=&#34;https://gohugo.io/documentation/&#34;&gt;&lt;code&gt;hugo docs&lt;/code&gt;&lt;/a&gt; for correctness&lt;/p&gt;</description>
      <content:encoded><![CDATA[
          <link rel="stylesheet" href="/css/vendors/admonitions.5c73bad2903e7d2d44ad118370ebd8c2cf5f239d4d93c283e55c00f2f8d30746.css" integrity="sha256-XHO60pA&#43;fS1ErRGDcOvYws9fI51Nk8KD5VwA8vjTB0Y=" crossorigin="anonymous">
  <div class="admonition warning">
    <div class="admonition-header">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z"/></svg>
      <span>caveat</span>
    </div>
      <div class="admonition-content">
        <p>I&rsquo;m writing based on my own experiences using <code>hugo</code> and my understanding of how things work, I&rsquo;ll probably get things wrong so please refer to the <a href="https://gohugo.io/documentation/"><code>hugo docs</code></a> for correctness</p>
      </div>
  </div>
<p>maybe it&rsquo;s because I&rsquo;ve been reading a ton of blog posts on <code>bluesky</code> from other engineers and developers or maybe it&rsquo;s because I have an oversized belief that my thoughts are actually interesting (like most software engineers), but I&rsquo;m finally starting a blog.</p>
<p>after doing a bit of research, I settled on using <code>hugo</code> for my auto-generated website and hosting through <code>github pages</code>. I considered some self-hosting alternatives like <code>nginx</code> and <code>caddy</code>, but the docs on the <code>hugo</code> site made it really easy to auto-deploy on <code>github pages</code>.</p>



  <blockquote>
    <p>turns out, auto-deployment is a bitch to solve by yourself on a self-hosted machine. I&rsquo;m not trying to deal with jenkins or buildkite.</p>
<p>plus the fact that github pages is free doesn&rsquo;t hurt either</p>
  </blockquote>
<p>it wasn&rsquo;t even too hard to set-up a custom domain with github pages as well. probably a solid option for static/server-side-rendered website hosting in 2025.</p>
<h2 id="lets-get-into-it">let&rsquo;s get into it <a class="anchor" href="#lets-get-into-it"
        title="Link to section: let&rsquo;s get into it" aria-label="Link to section: let&rsquo;s get into it">#</a></h2><p>to be honest, I&rsquo;m not a prolific frontend engineer, I&rsquo;m barely competent with <code>html</code>, and less than competent with <code>css</code>. I&rsquo;ve never used site generators and I use markdown in <code>obsidian</code> just to take notes and keep track of personal documents.</p>
<p>now the <code>hugo</code> docs may have helped with the deployment, but their ease-of-use ended there. I ended up digging through <code>hugo</code> forums, asking <code>chatgpt</code>, and old fashioned trial&rsquo;n error to eventually get a working site with all the bells and whistles I wanted.</p>
<h2 id="what-the-heck-is-">what the heck is {{}} <a class="anchor" href="#what-the-heck-is-"
        title="Link to section: what the heck is {{}}" aria-label="Link to section: what the heck is {{}}">#</a></h2><p><code>hugo</code> has custom syntax, templating, functions, methods, archetypes&hellip; the list goes on forever. it took me quite a while to finally figure out that in <code>.html</code> layout files and <code>.md</code> archetype files you could use  <code>{{ &lt;command&gt; }}</code> to access and work with pages, tags, and other data from my website. you can use this to create relative links, set-up reusable page structures, and plenty more.</p>
<p>this is a snippet that displays links to the 5 most recent posts on my site with the date they were posted</p>

<figure class="highlight">
  <figcaption>
    <span class="title">recent_posts</span>
  </figcaption>
  <pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span>{{ $recent_posts := ( (where .Site.Pages &#34;IsPage&#34; true).ByDate.Reverse) | first 5 }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>&lt;<span style="color:#ff79c6">p</span>&gt;here&#39;s a list of my most recent posts&lt;/<span style="color:#ff79c6">p</span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>&lt;<span style="color:#ff79c6">ul</span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>{{ range $recent_posts }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>&lt;<span style="color:#ff79c6">li</span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>    &lt;<span style="color:#ff79c6">time</span> <span style="color:#50fa7b">datetime</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;{{ .Date.Format &#34;</span><span style="color:#50fa7b">Jan</span> <span style="color:#50fa7b">02</span>, <span style="color:#50fa7b">2006</span>&#34; }}&#34;&gt;{{ .Date.Format &#34;Jan 02, 2006&#34; }}&lt;/<span style="color:#ff79c6">time</span>&gt;:
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>    &lt;<span style="color:#ff79c6">a</span> <span style="color:#50fa7b">href</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;{{ .RelPermalink }}&#34;</span>&gt;{{.LinkTitle}}&lt;/<span style="color:#ff79c6">a</span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>&lt;/<span style="color:#ff79c6">li</span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>{{ end }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>&lt;/<span style="color:#ff79c6">ul</span>&gt;</span></span></code></pre>
</figure>
<p>note how you can grab posts from the site with <code>.Site.Pages</code> and filter/sort them using methods like <code>where</code> and <code>.ByDate</code>.</p>
<h2 id="bear">ʕ•ᴥ•ʔ <a class="anchor" href="#bear"
        title="Link to section: ʕ•ᴥ•ʔ" aria-label="Link to section: ʕ•ᴥ•ʔ">#</a></h2><p>one of the first big mistakes I made was using the <a href="https://github.com/janraasch/hugo-bearblog"><code>hugo-bearblog</code></a> theme. now I have nothing against it, but the example site and styling left much to be desired. I didn&rsquo;t like that you were limited to only a <code>blog</code> section header, code block styling was atrocious, and honestly, probably since it was my first attempt, I had lots of trouble updating the layouts with my own ideas.</p>
<p>thankfully, I eventually found <a href="https://github.com/clente/hugo-bearcub"><code>hugo-bearcub</code></a> that seems to be just as fast as <code>hugo-bearblog</code>, highly accessible, and with a less opinionated structure. I was able to implement my own sections and updated the <code>nav.html</code> layout to render any a header link for any section I care to generate.</p>

<figure class="highlight">
  <figcaption>
    <span class="title">nav.html</span>
  </figcaption>
  <pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span>&lt;<span style="color:#ff79c6">a</span> <span style="color:#50fa7b">href</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;{{ &#34;</span>&#34; | <span style="color:#50fa7b">relURL</span> }}&#34;&gt;home&lt;/<span style="color:#ff79c6">a</span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2</span><span>{{ range .Site.Menus.main }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3</span><span>&lt;<span style="color:#ff79c6">a</span> <span style="color:#50fa7b">href</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;{{ .URL }}&#34;</span>&gt;{{ lower .Name }}&lt;/<span style="color:#ff79c6">a</span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4</span><span>{{ end }}</span></span></code></pre>
</figure>
<p>the <code>range</code> function syntax pattern is a bit strange to me coming from a mostly <code>python</code> and <code>java</code> background, but it reminds for a <code>for each</code> loop.</p>
<p>the other really strange thing to me about <code>hugo</code> syntax is that you have to use a <code>.</code> to reference the current local variable (<em>I think?</em>)</p>
<h2 id="layouts-archetypes-and-lookup-order-oh-my">layouts, archetypes, and lookup order, oh my! <a class="anchor" href="#layouts-archetypes-and-lookup-order-oh-my"
        title="Link to section: layouts, archetypes, and lookup order, oh my!" aria-label="Link to section: layouts, archetypes, and lookup order, oh my!">#</a></h2>
  <div class="admonition caution">
    <div class="admonition-header">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z"/></svg>
      <span>help</span>
    </div>
      <div class="admonition-content">
        <p>I have no idea how <code>hugo</code> site generation works</p>
      </div>
  </div>
<p><code>hugo</code> seems to generate the static site into the <code>public/</code> directory following the template that is described in <code>layouts/</code></p>
<p>I think it starts from <code>layouts/_defaults/baseof.html</code> and uses references to other <code>layouts</code> and <code>partials</code> to generate more html.</p>
<p>layouts allow you to pre-define html rendering patterns for parts of the webpage, like the above <a href="#nav.html"><code>nav.html</code></a></p>
<p><code>archetypes</code> are similar to <code>layouts</code> except they define the template for generating new content (new markdown pages). they can even use <code>hugo</code> functions and <a href="#shortcodes-or-longcodes"><code>shortcodes</code></a></p>
<p>lastly, lookup order in <code>hugo</code> is not exactly straightforward. there&rsquo;s more explanation in the docs but the primary thing for me to note:</p>

  <div class="admonition caution">
    <div class="admonition-header">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z"/></svg>
      <span>Caution</span>
    </div>
      <div class="admonition-content">
        <p>when using a theme, layouts from the <code>themes/</code> directory are applied first unless they are overwritten in the top-level <code>layouts/</code> directory</p>
      </div>
  </div>
<h3 id="markup-layouts">markup layouts <a class="anchor" href="#markup-layouts"
        title="Link to section: markup layouts" aria-label="Link to section: markup layouts">#</a></h3><p><strong>UPDATE: I have moved to start using <a href="https://github.com/KKKZOZ/hugo-admonitions"><code>hugo-admonitions</code></a> to render blockquotes.</strong></p>
<p>not all markdown features comes out of the box unfortunately, specifically <code>blockquotes</code>. normally you can specify a type of <code>blockquote</code> style, like <code>NOTE</code> or <code>WARNING</code>, and you get a nicely formatted and colored section:</p>
<p><img src="blockquote.png" alt="image of properly rendered blockquotes on github"></p>
<p>unfortunately for me, the way <code>hugo</code> generates html for markdown blockquotes does not support types. so I had to write a new markup template:</p>

  <div class="admonition tip">
    <div class="admonition-header">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><path d="M272 384c9.6-31.9 29.5-59.1 49.2-86.2c0 0 0 0 0 0c5.2-7.1 10.4-14.2 15.4-21.4c19.8-28.5 31.4-63 31.4-100.3C368 78.8 289.2 0 192 0S16 78.8 16 176c0 37.3 11.6 71.9 31.4 100.3c5 7.2 10.2 14.3 15.4 21.4c0 0 0 0 0 0c19.8 27.1 39.7 54.4 49.2 86.2l160 0zM192 512c44.2 0 80-35.8 80-80l0-16-160 0 0 16c0 44.2 35.8 80 80 80zM112 176c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-61.9 50.1-112 112-112c8.8 0 16 7.2 16 16s-7.2 16-16 16c-44.2 0-80 35.8-80 80z"/></svg>
      <span>success!</span>
    </div>
      <div class="admonition-content">
        <p>and by &ldquo;write&rdquo;, I of course mean, &ldquo;find on github&rdquo;</p>
      </div>
  </div>

<figure class="highlight">
  <pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span>{{ $emojis := dict
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>  &#34;caution&#34; &#34;:exclamation:&#34;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>  &#34;important&#34; &#34;:information_source:&#34;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>  &#34;note&#34; &#34;:information_source:&#34;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span>  &#34;tip&#34; &#34;:bulb:&#34;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>  &#34;warning&#34; &#34;:warning:&#34;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>}}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>{{ if eq .Type &#34;alert&#34; }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>  &lt;<span style="color:#ff79c6">blockquote</span> <span style="color:#50fa7b">class</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;alert alert-{{ .AlertType }}&#34;</span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span>    &lt;<span style="color:#ff79c6">p</span> <span style="color:#50fa7b">class</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;alert-heading&#34;</span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>      {{ transform.Emojify (index $emojis .AlertType) }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span>      {{ with .AlertTitle }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14</span><span>        {{ . }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15</span><span>      {{ else }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16</span><span>        {{ or (i18n .AlertType) (title .AlertType) }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17</span><span>      {{ end }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18</span><span>    &lt;/<span style="color:#ff79c6">p</span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19</span><span>    {{ .Text }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20</span><span>  &lt;/<span style="color:#ff79c6">blockquote</span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21</span><span>{{ else }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22</span><span>  &lt;<span style="color:#ff79c6">blockquote</span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23</span><span>    {{ .Text }}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24</span><span>  &lt;/<span style="color:#ff79c6">blockquote</span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25</span><span>{{ end }}</span></span></code></pre>
</figure>
<h2 id="pagination---bless-jmooring">pagination - bless <a href="https://github.com/jmooring">jmooring</a> <a class="anchor" href="#pagination---bless-jmooring"
        title="Link to section: pagination - bless jmooring" aria-label="Link to section: pagination - bless jmooring">#</a></h2><p>I was able to seamlessly implement pagination for any multi-page blog posts thanks to super helpful comments and gists posted by <code>jmooring</code>. you can find the relevant code here: <a href="https://github.com/jmooring/hugo-testing/tree/hugo-forum-topic-29161">jmooring multipage example</a></p>
<p>by simply adding <code>layout = &quot;multipage&quot;</code> to the params of a content page, it&rsquo;ll automatically render links to next page</p>



  <blockquote>
    <p>looks like <code>jmooring</code> is one of the contributors of <code>hugo</code> and super responsive on the <code>hugo</code> forum!</p>
  </blockquote>
<h2 id="shortcodes-or-longcodes">shortcodes or longcodes <a class="anchor" href="#shortcodes-or-longcodes"
        title="Link to section: shortcodes or longcodes" aria-label="Link to section: shortcodes or longcodes">#</a></h2><p><code>hugo</code> has support for a feature called <code>shortcodes</code> that allow you to write custom logic functions within your markdown content pages. I&rsquo;m able to use the <a href="#shortcode"><code>recent_posts</code> shortcode</a> as follows in a <code>.md</code> file</p>

<figure class="highlight">
  <pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span>{{\&lt; <span style="color:#ff79c6">recent_posts</span> &gt;}}</span></span></code></pre>
</figure>







<p>here's a list of my most recent posts</p>
<ul>

  
  
    
  
<li>
    <time datetime="Apr 09, 2025">Apr 09, 2025</time>:
    <a href="/tech/db_migration/">migrating my aws database to cockroach labs in 12 hours</a>
</li>

  
  
    
  
<li>
    <time datetime="Mar 05, 2025">Mar 05, 2025</time>:
    <a href="/tech/git_ctf/">git ctf</a>
</li>

  
  
    
  
<li>
    <time datetime="Feb 24, 2025">Feb 24, 2025</time>:
    <a href="/tech/hugo/">setting up a personal blog with hugo</a>
</li>

  
  
    
  
<li>
    <time datetime="Feb 12, 2025">Feb 12, 2025</time>:
    <a href="/now/">now</a>
</li>

</ul>


  <div class="admonition error">
    <div class="admonition-header">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM175 175c9.4-9.4 24.6-9.4 33.9 0l47 47 47-47c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-47 47 47 47c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-47-47-47 47c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l47-47-47-47c-9.4-9.4-9.4-24.6 0-33.9z"/></svg>
      <span>formatting</span>
    </div>
      <div class="admonition-content">
        <p><code>hugo</code> is incredibly precise about the <code>shortcode</code> invocation.</p>
<p>the format must be {{&lt; shortcode &gt;}} with that exact spacing</p>
      </div>
  </div>
<h2 id="anchor-links">anchor links <a class="anchor" href="#anchor-links"
        title="Link to section: anchor links" aria-label="Link to section: anchor links">#</a></h2><p>there is anchor link support in markdown by default with the pattern</p>

<figure class="highlight">
  <pre tabindex="0" class="chroma"><code class="language-md" data-lang="md"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span><span style="font-weight:bold">## heading name {#heading}
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2</span><span><span style="font-weight:bold"></span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3</span><span>[<span style="color:#ff79c6">heading link</span>](<span style="color:#50fa7b">#heading</span>)</span></span></code></pre>
</figure>
<p>for example:
<a href="#bear">ʕ•ᴥ•ʔ</a></p>
<p>but I did miss the on-hover, click-to-copy anchor link pattern from <code>confluence</code> and <code>quip</code>. I fortunately found this super in-depth <a href="https://dariusz.wieckiewicz.org/en/supercharge-your-headings-in-hugo-with-render-hooks/">guide</a> that helped me formulate automatic generation of anchor tags based on the headings with copy-on-click and appear-on-hover.</p>
<p>the partial template essentially just adds an <code>&lt;a&gt;</code> tag to every heading with an <code>anchor</code> classname.</p>

<figure class="highlight">
  <figcaption>
    <span class="title">render-heading.html</span>
  </figcaption>
  <pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1</span><span>&lt;<span style="color:#ff79c6">h</span>{{ .<span style="color:#50fa7b">Level</span> }} <span style="color:#50fa7b">id</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;{{ .Anchor | safeURL }}&#34;</span>&gt;{{ .Text | safeHTML }} &lt;<span style="color:#ff79c6">a</span> <span style="color:#50fa7b">class</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;anchor&#34;</span> <span style="color:#50fa7b">href</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;#{{ .Anchor | safeURL }}&#34;</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2</span><span>        <span style="color:#50fa7b">title</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;Link to section: {{ .Text | safeHTML }}&#34;</span> <span style="color:#50fa7b">aria-label</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;Link to section: {{ .Text | safeHTML }}&#34;</span>&gt;#&lt;/<span style="color:#ff79c6">a</span>&gt;&lt;/h{{
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3</span><span>    .Level }}&gt;</span></span></code></pre>
</figure>
<p>the majority of the benefit comes from <code>css</code> and I barely know how it works other than changing the opacity to 0 while not being hovered over. I copied the <code>original.css</code> style sheet from the <code>hugo-bearcub</code> theme and added the following styling.</p>

<figure class="highlight">
  <figcaption>
    <span class="title">original.css</span>
  </figcaption>
  <pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1</span><span>:root {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2</span><span>    <span style="color:#8be9fd;font-style:italic">--main</span>: <span style="color:#bd93f9">#137faa</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3</span><span>  }
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4</span><span>  
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5</span><span><span style="color:#ff79c6">a</span>.<span style="color:#50fa7b">anchor</span> {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6</span><span>    <span style="color:#ff79c6">color</span>: <span style="color:#50fa7b">var</span>(<span style="color:#ff79c6">--</span>main);
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7</span><span>    <span style="color:#ff79c6">text-decoration</span>: <span style="color:#ff79c6">none</span> <span style="color:#ff79c6">!important</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8</span><span>  }
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9</span><span>  
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10</span><span>  @<span style="color:#ff79c6">media</span> <span style="color:#ff79c6">(</span><span style="color:#ff79c6">hover</span><span style="color:#ff79c6">:</span> <span style="color:#ff79c6">hover</span><span style="color:#ff79c6">)</span> {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11</span><span>      <span style="color:#ff79c6">a</span>.<span style="color:#50fa7b">anchor</span> {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12</span><span>        <span style="color:#ff79c6">opacity</span>: <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13</span><span>      }
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14</span><span>    <span style="color:#ff79c6">h1</span>:hover <span style="color:#ff79c6">a</span>.<span style="color:#50fa7b">anchor</span><span style="color:#ff79c6">,</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15</span><span>    <span style="color:#ff79c6">h2</span>:hover <span style="color:#ff79c6">a</span>.<span style="color:#50fa7b">anchor</span><span style="color:#ff79c6">,</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16</span><span>    <span style="color:#ff79c6">h3</span>:hover <span style="color:#ff79c6">a</span>.<span style="color:#50fa7b">anchor</span><span style="color:#ff79c6">,</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17</span><span>    <span style="color:#ff79c6">h4</span>:hover <span style="color:#ff79c6">a</span>.<span style="color:#50fa7b">anchor</span><span style="color:#ff79c6">,</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18</span><span>    <span style="color:#ff79c6">h5</span>:hover <span style="color:#ff79c6">a</span>.<span style="color:#50fa7b">anchor</span><span style="color:#ff79c6">,</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19</span><span>    <span style="color:#ff79c6">h6</span>:hover <span style="color:#ff79c6">a</span>.<span style="color:#50fa7b">anchor</span> {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20</span><span>      <span style="color:#ff79c6">opacity</span>: <span style="color:#bd93f9">1</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21</span><span>    }
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22</span><span>  }
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23</span><span>  
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24</span><span>  @<span style="color:#ff79c6">media</span> <span style="color:#ff79c6">(</span><span style="color:#ff79c6">hover</span><span style="color:#ff79c6">:</span> <span style="color:#ff79c6">none</span><span style="color:#ff79c6">)</span> {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25</span><span>      <span style="color:#ff79c6">a</span>.<span style="color:#50fa7b">anchor</span> {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26</span><span>        <span style="color:#ff79c6">opacity</span>: <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27</span><span>      }
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28</span><span>  }</span></span></code></pre>
</figure>
<h2 id="anything-else">anything else? <a class="anchor" href="#anything-else"
        title="Link to section: anything else?" aria-label="Link to section: anything else?">#</a></h2><p>the only annoying part of the workflow left  at this point (besides pretty much any site framework changes), is that to actually publish a new post, I have to move the content from my editor, <code>obsidian</code>, to my <code>hugo</code> git repository and push my changes. it may be possible to use <code>rsync</code> or symlinks to link my <code>obsidian</code> content directory directly to a directory in my blog repo, but I&rsquo;m thinking about exploring ways to access my <code>obsidian</code> synced vaults via an API.</p>
<p>I think it&rsquo;d be a fun challenge to somehow set up <code>bluesky</code> comments on my blog posts, I&rsquo;ve seen others do something similar a few times but haven&rsquo;t looked into it.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
